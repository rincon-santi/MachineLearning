v = [(-10.389610389610397, 13.896103896103902), (8.116883116883116, 11.298701298701303), (4.761904761904759, 1.9913419913419936), (1.298701298701296, 12.056277056277061), (16.233766233766232, 0.3679653679653718), (15.367965367965368, 16.601731601731608), (4.112554112554108, 6.212121212121215), (-5.303030303030308, 7.727272727272734), (-8.116883116883123, -14.567099567099566)]

u = [(-14.069264069264076, 10.43290043290044), (-15.367965367965375, -10.887445887445887), (5.627705627705623, -15.108225108225108), (-8.658008658008665, -0.9307359307359278), (-4.4372294372294405, -12.186147186147185), (-11.796536796536802, -14.025974025974026), (-7.467532467532472, -10.995670995670995), (-15.367965367965375, -1.2554112554112535), (-2.056277056277061, -7.748917748917748), (-10.06493506493507, -6.1255411255411225), (-0.4329004329004391, -16.73160173160173), (11.904761904761905, 6.969696969696976)]

Xtilde = np.array([[  1.        ,   1.        ,   1.        ,   1.        ,
          1.        ,   1.        ,   1.        ,   1.        ,
          1.        ,   1.        ,   1.        ,   1.        ,
          1.        ,   1.        ,   1.        ,   1.        ,
          1.        ,   1.        ,   1.        ,   1.        ,
          1.        ],
       [-10.38961039,   8.11688312,   4.76190476,   1.2987013 ,
         16.23376623,  15.36796537,   4.11255411,  -5.3030303 ,
         -8.11688312, -14.06926407, -15.36796537,   5.62770563,
         -8.65800866,  -4.43722944, -11.7965368 ,  -7.46753247,
        -15.36796537,  -2.05627706, -10.06493506,  -0.43290043,
         11.9047619 ],
       [ 13.8961039 ,  11.2987013 ,   1.99134199,  12.05627706,
          0.36796537,  16.6017316 ,   6.21212121,   7.72727273,
        -14.56709957,  10.43290043, -10.88744589, -15.10822511,
         -0.93073593, -12.18614719, -14.02597403, -10.995671  ,
         -1.25541126,  -7.74891775,  -6.12554113, -16.73160173,
          6.96969697]]);
T = np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]);

# np.dot((np.dot(np.transpose(Wtilde),Xtilde)-T),np.transpose(Xtilde)) // array_equal zeros(lhs.shape)
# np.dot(np.dot(np.transpose(Wtilde),Xtilde),np.transpose(Xtilde))-np.dot(T,np.transpose(Xtilde)) // array_equal zeros(lhs.shape)
# np.dot(Xtilde,np.dot(np.transpose(Xtilde),Wtilde)) array_equal np.dot(Xtilde,np.transpose(T))
Wtilde = np.dot(np.linalg.inv(np.dot(Xtilde,np.transpose(Xtilde))),np.dot(Xtilde,np.transpose(T)));


>>> dom = np.linspace(-20,20,100)
>>> ran = (-Wtilde[0] -Wtilde[1]*dom )/Wtilde[2]
>>> pl.plot([a for (a,b) in u],[b for (a,b) in u],'og')
[<matplotlib.lines.Line2D object at 0x7f6ad699dcd0>]
>>> pl.plot([a for (a,b) in v],[b for (a,b) in v],'or')
[<matplotlib.lines.Line2D object at 0x7f6ad699dd50>]
>>> pl.plot(dom,ran)
[<matplotlib.lines.Line2D object at 0x7f6ad692a250>]
>>> pl.show()
>>> 

